syntax = "proto3";
package pancake.maker;

option go_package = "gen/api";

import "google/protobuf/timestamp.proto";

service PancakeBakerService {
	// Bakeは指定されたメニューのパンケーキを焼く関数です
	rpc Bake(BakeRequest) returns (BakeResponse) {}
	// Reportはメニューごとに焼いたパンケーキの数を返します
	rpc Report(ReportRequest) returns (ReportResponse) {}
	// NotifyBakedはパンケーキが焼かれたら常に通知します。自分の焼いたパンケーキ以外でも通知されます。
	rpc NotifyBaked(NotifiyBakedRequest) returns (stream NotifyBakedResponse) {}
}

//Pancakeは一枚一枚の焼かれたパンケーキを表します。
message Pancake {
	//メニュー表
	enum Menu{
		UNKNOWN = 0;
		CLASSIC= 1;
		BANANA_AND_WHIP = 2;
		BACON_AND_CHEESE = 3;
		MIX_BERRY = 4;
		BAKED_MARSHMALLOW = 5;
		SPICY_CURRY = 6;
	}
	
	//シェフの名前
	string chef_name = 1;
	//メニュー
	Menu menu = 2;
	//焼き具合を表すスコアです(0-0.9)
	float technical_score = 3;
	//焼いた日時
    google.protobuf.Timestamp create_time = 15;
}

//Reportはどのくらいパンケーキを焼いたかについての報告書を表します
message Report{
	message BakeCount{
		Pancake.Menu menu = 1;
		int32 count = 2;
	}
	repeated BakeCount bake_counts = 1;
}

message BakeRequest {
	Pancake.Menu menu = 1;
}

message BakeResponse {
	Pancake pancake = 1;
}

message ReportRequest {}

message ReportResponse {
	Report report = 1;
}

message NotifiyBakedRequest {}

message NotifyBakedResponse {
	Pancake pancake = 1;
}